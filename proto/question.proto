syntax = "proto3";
package question;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.populate_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;


service Question {
    rpc Index (IndexRequest) returns (IndexResponse) {
    }
    rpc GetQuestionList (GetQuestionRequest) returns (GetQuestionResponse) {
    }
    rpc GetUserShare (GetUserShareRequest) returns (GetUserShareResponse) {
    }
    rpc UploadResult (UploadResultRequest) returns (UploadResultResponse) {
    }
}

message RspStatus {
    int64 code = 1 [(gogoproto.jsontag) = "code"];
    string msg = 2;
}

message UploadResultRequest {
    int64 userId = 1 [(gogoproto.jsontag) = "userId"];
    int64 score = 2 [(gogoproto.jsontag) = "score"];
}

message UploadResultResponse {
    RspStatus status = 1;
}
// index request
message IndexRequest {
    int64 userId = 1;
}
// index response
message IndexResponse {
    RspStatus status = 1;
    int64 chance = 2 [(gogoproto.jsontag) = "chance"];
    int64 score = 3 [(gogoproto.jsontag) = "score"];
    int64 today_shares = 4 [(gogoproto.jsontag) = "today_shares"];
    int64 goods = 5 [(gogoproto.jsontag) = "goods"];
    string sign = 6 [(gogoproto.jsontag) = "sign"];
    repeated string gift = 7 [(gogoproto.jsontag) = "gift"];
    IndexConfig config = 8 [(gogoproto.jsontag) = "config"];
}
// index config
message IndexConfig {
    int64 gift_show = 1 [(gogoproto.jsontag) = "gift_show"];
    string index_title = 2 [(gogoproto.jsontag) = "index_title"];
    string index_share_title = 3 [(gogoproto.jsontag) = "index_share_title"];
    string new_share_txt = 4 [(gogoproto.jsontag) = "new_share_txt"];
    string index_share_img = 5 [(gogoproto.jsontag) = "index_share_img"];
    string index_html_title1 = 6 [(gogoproto.jsontag) = "index_html_title1"];
    string index_html_title2 = 7 [(gogoproto.jsontag) = "index_html_title2"];
    string game_rule1 = 8 [(gogoproto.jsontag) = "game_rule1"];
    string game_rule2 = 9 [(gogoproto.jsontag) = "game_rule2"];
    string game_rule3 = 10 [(gogoproto.jsontag) = "game_rule3"];
    string game_rule4 = 11 [(gogoproto.jsontag) = "game_rule4"];
    string game_rule5 = 12 [(gogoproto.jsontag) = "game_rule5"];
    int64 max_share = 13 [(gogoproto.jsontag) = "max_share"];
    string index_bar_title = 14 [(gogoproto.jsontag) = "index_html_title1"];
}

// user_share request
message GetUserShareRequest {
    string encryptedData = 1;
    string iv = 2;
    int64 userId = 3;
}
// user_share response
message GetUserShareResponse {
    RspStatus status = 1;
    int64 chance = 2 [(gogoproto.jsontag) = "chance"];
    int64 repeat = 3 [(gogoproto.jsontag) = "repeat"];
    int64 today_shares = 4 [(gogoproto.jsontag) = "today_shares"];
    int64 error_code = 5 [(gogoproto.jsontag) = "error_code"];
}
//  question request
message GetQuestionRequest {
    string sign = 1;
    int64 userId = 2;
}
//  question response
message GetQuestionResponse {
    RspStatus status = 1;
    repeated QuestionList data = 2;
}

message QuestionList {
    int64 num1 = 1 [(gogoproto.jsontag) = "num1"];
    string operator = 2;
    int64 num2 = 3 [(gogoproto.jsontag) = "num2"];
    int64 result = 4 [(gogoproto.jsontag) = "result"];
    int64 success = 5 [(gogoproto.jsontag) = "success"];
    float seconds = 6 [(gogoproto.jsontag) = "seconds"];
}
